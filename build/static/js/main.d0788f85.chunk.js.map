{"version":3,"sources":["Assets/sarah-lecture.jpg","Components/Info.js","Components/Exp.js","Components/Skill.js","Components/Language.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Info","_ref","sticky","title","description","react_default","a","createElement","Grid","container","item","xs","style","height","position","top","backgroundColor","justifyContent","Typography","color","variant","md","Exp","company","date","location","Card","elevation","borderRadius","CardContent","component","align","textAlign","Skills","tileData","GridList","cellHeight","cols","map","tile","GridListTile","key","name","src","img","alt","objectFit","GridListTileBar","Language","lang","level","stars","alignSelf","width","require","whyDidYouRender","React","theme","createMuiTheme","typography","fontSize","fontFamily","teal","palette","primary","main","secondary","App","_useState","useState","_useState2","Object","slicedToArray","experiences","setExperiences","_useState3","_useState4","skills","setSkills","_useState5","_useState6","educations","setEducations","_useState7","_useState8","setSticky","useEffect","axios","get","then","response","data","window","addEventListener","scrollY","console","log","ThemeProvider","margin","Info_Info","spacing","alignContent","flexDirection","backgroundSize","backgroundImage","concat","ImageLecture","backgroundRepeat","lg","Language_Language","ed","i","Exp_Exp","courses","school","exp","Skill_Skills","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d0788f85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sarah-lecture.2bf4c2d5.jpg\";","import React from 'react'\r\nimport {Grid, Typography} from '@material-ui/core/'\r\n\r\n\r\nexport const Info = ({sticky, title, description}) => {\r\n  return (\r\n\r\n    <Grid container item xs={12} style={{\r\n      height: '11em',\r\n      position: sticky ? 'sticky' : 'relative',\r\n      top: sticky ? '10px' : '210px',\r\n      backgroundColor: 'white',\r\n      justifyContent: 'center'\r\n    }}>\r\n      <Grid container item xs={12} style={{justifyContent: 'center'}}>\r\n        <Typography color={\"primary\"} variant=\"h2\">{title}</Typography>\r\n      </Grid>\r\n      <Grid container item xs={12} style={{justifyContent: 'center'}}>\r\n        <Typography color={\"primary\"} variant=\"subtitle1\">{description}</Typography>\r\n      </Grid>\r\n\r\n      <Grid container item xs={12} md={8} style={{justifyContent: 'center'}}>\r\n        <Grid container item xs={12} md={6} style={{justifyContent: 'center'}}>\r\n          <Typography color={\"secondary\"} variant=\"subtitle2\">Mail: sarah.mauret@epfedu.fr</Typography>\r\n        </Grid>\r\n        <Grid container item xs={12} md={6} style={{justifyContent: 'center'}}>\r\n          <Typography color={\"secondary\"} variant=\"subtitle2\">LinkedIn: www.linkedin.com/in/sarah-mauret</Typography>\r\n        </Grid>\r\n        <Grid container item xs={12} md={6} style={{justifyContent: 'center'}}>\r\n          <Typography color={\"secondary\"} variant=\"subtitle2\">Phone: (+33) 6 45 06 38 69</Typography>\r\n        </Grid>\r\n        <Grid container item xs={12} md={6} style={{justifyContent: 'center'}}>\r\n          <Typography color={\"secondary\"} variant=\"subtitle2\">Address: 20 rue Georges Bizet, Paris, France</Typography>\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </Grid>\r\n  )\r\n};\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {Grid, Card, CardContent, Typography} from '@material-ui/core/'\r\n\r\nexport const Exp = ({title, company, date, location, description}) => {\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Card elevation={0} style={{ borderRadius:'0'}}>\r\n        <CardContent>\r\n          <Typography color={\"primary\"} variant=\"h5\" component=\"h2\" align={'center'}>\r\n            {title}\r\n          </Typography>\r\n          <Typography color={\"secondary\"} variant=\"subtitle1\" component=\"h3\">\r\n            {company}\r\n          </Typography>\r\n          <Typography variant=\"subtitle2\" component=\"h3\" style={{color: '#808080', textAlign: 'right'}}>\r\n            {date}\r\n          </Typography>\r\n          <Typography variant=\"body1\" component=\"h2\" style={{color: '#505050', textAlign: 'left'}}>\r\n            {description}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n      )\r\n}\r\n","import React from 'react'\r\nimport {GridListTile, GridList, GridListTileBar} from '@material-ui/core/'\r\n\r\nexport const Skills = ({tileData}) => {\r\n  return (\r\n    <GridList cellHeight={160} cols={3}>\r\n      {tileData.map(tile => (\r\n        <GridListTile key={tile.name} cols={tile.cols || 1}>\r\n          <img src={tile.img} alt={tile.name} style={{objectFit: 'cover'}} />\r\n          <GridListTileBar\r\n            title={tile.name}\r\n          />\r\n        </GridListTile>\r\n      ))}\r\n    </GridList>\r\n      )\r\n};\r\n","import React from 'react'\r\nimport {Grid, Typography} from '@material-ui/core/'\r\n\r\nexport const Language = ({lang, level}) => {\r\n\r\n  const stars = level => {\r\n    switch (level) {\r\n      case 0:\r\n        return ''\r\n      case 1:\r\n        return '★'\r\n      case 2:\r\n        return '★★'\r\n      case 3:\r\n        return '★★★'\r\n      case 4:\r\n        return '★★★★'\r\n      case 5:\r\n        return '★★★★★'\r\n      default:\r\n        return '★★★★★'\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container item xs={6}>\r\n      <Grid container item xs={5} style={{justifyContent: 'center'}}>\r\n        <Typography variant=\"subtitle2\" style={{color: '#808080', alignSelf:'center'}}>{lang}</Typography>\r\n      </Grid>\r\n      <Grid container item xs={6}>\r\n        <Typography color={\"primary\"} variant=\"h5\" style={{width:'fit-content'}}>{stars(level)}</Typography>\r\n        <Typography color={\"secondary\"} variant=\"h5\" style={{width:'fit-content'}}>{stars(5-level)}</Typography>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n};\r\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Grid, createMuiTheme, CardContent, Card} from '@material-ui/core/'\nimport {teal} from '@material-ui/core/colors';\nimport {ThemeProvider} from '@material-ui/styles';\nimport ImageLecture from './Assets/sarah-lecture.jpg';\nimport {Info} from \"./Components/Info\";\nimport {Exp} from \"./Components/Exp\";\nimport {Skills} from \"./Components/Skill\";\nimport {Language} from \"./Components/Language\";\n\nconst whyDidYouRender = require('@welldone-software/why-did-you-render');\nwhyDidYouRender(React);\n\nconst theme = createMuiTheme({\n  typography: {\n    fontSize: 15,\n    fontFamily: 'system-ui',\n    color: teal[300]\n  },\n  palette: {\n    primary: {\n      main: teal[800]\n    },\n    secondary: {\n      main: teal[300]\n    }\n\n  }\n});\n\nfunction App() {\n  const [experiences, setExperiences] = useState([]);\n  const [skills, setSkills] = useState([]);\n  const [educations, setEducations] = useState([]);\n  const [sticky, setSticky] = useState(true);\n\n  useEffect(() => {\n    axios.get('https://raw.githubusercontent.com/smauret/my-resume/master/public/Assets/Data/Experiences.json').then(response => {\n      setExperiences(response.data)\n    });\n    axios.get('https://raw.githubusercontent.com/smauret/my-resume/master/public/Assets/Data/Skills.json').then(response => {\n      setSkills(response.data)\n    });\n    axios.get('https://raw.githubusercontent.com/smauret/my-resume/master/public/Assets/Data/Educations.json').then(response => {\n      setEducations(response.data)\n    });\n  }, []);\n\n  const handleScroll = () => {\n    if (window.scrollY > 200) {\n      setSticky(false);\n      console.log(window.scrollY)\n    } else {\n      setSticky(true);\n    }\n  };\n  window.addEventListener('scroll', handleScroll);\n\n  const renderExp = () => {\n    return experiences.map(\n      (exp, i) => <Exp key={i}\n                       title={exp.title}\n                       company={exp.company} date={exp.date}\n                       location={exp.location}\n                       description={exp.description}/>);\n  };\n\n  const renderEd = () => {\n    return educations.map(\n      (ed, i) => <Exp key={i}\n                      title={ed.title} courses={ed.courses}\n                      school={ed.school} date={ed.date}\n                      location={ed.location}\n                      description={ed.description}/>);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container elevation={4} style={{backgroundColor: '#3f4240', width: '100%', justifyContent: 'center'}}>\n\n        <Grid style={{width: '100%', height: '100%', margin: '8px'}}>\n\n          <Info sticky={sticky} title={'Sarah MAURET'} description={'Looking for a developer position in the USA.'}/>\n\n          <Grid container spacing={2} style={{\n            alignContent: 'center',\n            flexDirection: 'column',\n            width: '100%',\n            margin: '0',\n            backgroundColor: 'white',\n          }}>\n\n            <div title={'Giving an Ethereum intro class to engineering students - June 2019'}\n                 style={{\n                   height: '50vh',\n                   margin: '30px 0',\n                   backgroundSize: 'contain',\n                   backgroundImage: `url(${ImageLecture})`,\n                   backgroundRepeat: 'no-repeat'\n                 }}/>\n\n            <Grid container item xs={12} md={10} lg={8} spacing={2}>\n              <Card elevation={0} style={{borderRadius: '0', width: '100%'}}>\n                <CardContent>\n                  <Grid container item xs={12}>\n                    <Language lang={'French (Mother tongue)'} level={5}/>\n                    <Language lang={'German (Survivable)'} level={3}/>\n                    <Language lang={'English (Daily use)'} level={5}/>\n                    <Language lang={'Spanish (Si, Señor)'} level={3}/>\n                  </Grid>\n                </CardContent>\n              </Card>\n              {renderEd()}\n              {renderExp()}\n              <Skills tileData={skills}/>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n\nApp.whyDidYouRender = true;\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}